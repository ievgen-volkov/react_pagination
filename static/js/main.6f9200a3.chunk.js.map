{"version":3,"sources":["utils.ts","components/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","i","push","Pagination","total","itemsPerPage","currentPage","onChangePage","lastPage","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","memo","pageItems","n","App","useState","setPage","setItemsPerPage","firstPage","length","showItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIHG,EAA8B,SAAC,GAK9B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGY,KAAKC,KAAKF,IAEtC,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAA0B,IAAhBR,IAHd,SAOE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAeDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAASZ,IALvB,SASE,mBACES,KAAK,KACLH,UAAU,YACV,UAAQ,WACRI,QAAS,WACHE,IAASZ,GACXC,EAAaW,IANnB,SAUGA,KAlBEA,MAuBT,oBAAIN,UAAWC,IACb,YACA,CACEC,SAAUR,IAAgBE,IAH9B,SAOE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACHV,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,0BAmBKc,iBAAKjB,GC3FdkB,EAAYxB,EAAW,EAAG,IAAIoB,KAAI,SAAAK,GAAC,qBAAYA,MA6DtCC,EA3DO,WACpB,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAAwCD,mBAAS,GAAjD,mBAAOnB,EAAP,KAAqBqB,EAArB,KACMC,GAAaT,EAAO,GAAKb,EACzBG,EAAWa,EAAUO,OAASV,EAAOb,EACvCgB,EAAUO,OACVV,EAAOb,EACLwB,EAAYR,EAAUS,MAAMH,EAAWnB,GAE7C,OACE,sBAAKI,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BS,EAAY,EADtC,cAC6CnB,EAD7C,eAC4Da,EAAUO,OADtE,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO3B,EACP4B,SAAU,SAACC,GACTR,GAAiBQ,EAAMC,OAAOH,OAC9BP,EAAQ,IAPZ,UAUE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOiB,EAAUO,OACjBvB,aAAcA,EACdC,YAAaY,EACbX,aAAckB,IAEhB,6BACGI,EAAUZ,KAAI,SAAAoB,GAAI,OACjB,6BACGA,GADMA,YCrDnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.6f9200a3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let i = from; i <= to; i += 1) {\n    numbers.push(i);\n  }\n\n  return numbers;\n}\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../utils';\n\ninterface Props {\n  total: number;\n  itemsPerPage: number;\n  currentPage: number;\n  onChangePage: (page: number) => void;\n}\n\nconst Pagination: React.FC<Props> = ({\n  total,\n  itemsPerPage,\n  currentPage,\n  onChangePage,\n}) => {\n  const lastPage = Math.ceil(total / itemsPerPage);\n  const pages = getNumbers(1, Math.ceil(lastPage));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => {\n              if (currentPage !== 1) {\n                onChangePage(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              {\n                active: page === currentPage,\n              },\n            )}\n          >\n            <a\n              href=\"#1\"\n              className=\"page-link\"\n              data-cy=\"pageLink\"\n              onClick={() => {\n                if (page !== currentPage) {\n                  onChangePage(page);\n                }\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === lastPage,\n          },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === lastPage}\n            onClick={() => {\n              if (currentPage !== lastPage) {\n                onChangePage(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default memo(Pagination);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport Pagination from './components/Pagination';\n\nconst pageItems = getNumbers(1, 42).map(n => `Item ${n}`);\n\nconst App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const firstPage = (page - 1) * itemsPerPage;\n  const lastPage = pageItems.length < page * itemsPerPage\n    ? pageItems.length\n    : page * itemsPerPage;\n  const showItems = pageItems.slice(firstPage, lastPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (Items ${firstPage + 1} - ${lastPage} of ${pageItems.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          Items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={pageItems.length}\n        itemsPerPage={itemsPerPage}\n        currentPage={page}\n        onChangePage={setPage}\n      />\n      <ul>\n        {showItems.map(item => (\n          <li key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}